remove_hist() {
    if [ -z "$1" ]; then
        echo "Usage: remove_hist <string>"
        return 1
    fi
    LC_ALL=C sed -i '' "/$1/d" "$HISTFILE" && echo "Removed entries containing '$1' from history."
    LC_ALL=C sed -i '' "/remove_hist/d" "$HISTFILE"
}

function update_webui() {
    echo "Updating WebUI..."

    # Check for --force flag
    if [ "$1" = "--force" ]; then
        force_update=1
    fi

    local container_name="open-webui"
    local image_name
    local local_digest remote_digest

    echo "    Checking for updates..."
    # Get the image name from the running container
    image_name=$(docker inspect --format='{{.Config.Image}}' "$container_name" 2>/dev/null)
    if [ -z "$image_name" ]; then
        echo "Error: Container '$container_name' not found."
        return 1
    fi

    # Get the current local image digest
    local_digest=$(docker images --no-trunc --format '{{.Digest}}' "$image_name")

    # Pull the latest image
    docker pull ghcr.io/open-webui/open-webui:main

    # Get the new image digest from the remote repository
    remote_digest=$(docker images --no-trunc --format '{{.Digest}}' "$image_name")

    # Check if update is needed
    if [ "$local_digest" = "$remote_digest" ] && [ "$force_update" -eq 0 ]; then
        echo "No update available for '$image_name'."
        return 0
    fi

    echo "    Removing WebUI docker container..."
    docker rm -f open-webui
    echo "    Pulling current WebUI docker image..."
    docker pull ghcr.io/open-webui/open-webui:main
    echo "    Starting updated WebUI docker image"
    docker run -d -p 3000:8080 -v open-webui:/app/backend/data --name open-webui ghcr.io/open-webui/open-webui:main
}